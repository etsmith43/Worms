			if(angle >= firstAngle && angle <= lastAngle)
				surface((xc+x)+(yc+y)*width] = 1;
			
			pointx = xc+y;
			pointy = yc+x;
			angle = (float) Math.atan2((double) (pointy-yc),(double)(pointx-xc));
			if(angle >= firstAngle && angle <= lastAngle)
				map[(xc+y)+(yc+x)*width] = 1;

			pointx = xc-y;
			pointy = yc+x;
			angle = (float) Math.atan2((double) (pointy-yc),(double)(pointx-xc));			
			if(angle >= firstAngle && angle <= lastAngle)
				map[(xc-y)+(yc+x)*width] = 1;
						
			pointx = xc-x;
			pointy = yc+y;
			angle = (float) Math.atan2((double) (pointy-yc),(double)(pointx-xc));			
			if(angle >= firstAngle && angle <= lastAngle)
				map[(xc-x)+(yc+y)*width] = 1;
						
			pointx = xc-x;
			pointy = yc-y;
			angle = (float) Math.atan2((double) (pointy-yc),(double)(pointx-xc));			
			if(angle >= firstAngle && angle <= lastAngle)
				map[(xc-x)+(yc-y)*width] = 1;

			pointx = xc-y;
			pointy = yc-x;
			angle = (float) Math.atan2((double) (pointy-yc),(double)(pointx-xc));			
			if(angle >= firstAngle && angle <= lastAngle)
				map[(xc-y)+(yc-x)*width] = 1;

			pointx = xc+y;
			pointy = yc-x;
			angle = (float) Math.atan2((double) (pointy-yc),(double)(pointx-xc));			
			if(angle >= firstAngle && angle <= lastAngle)
				map[(xc+y)+(yc-x)*width] = 1;

			pointx = xc+x;
			pointy = yc-y;
			angle = (float) Math.atan2((double) (pointy-yc),(double)(pointx-xc));			
			if(angle >= firstAngle && angle <= lastAngle)
				map[(xc+x)+(yc-y)*width] = 1;